{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Modal/Modal.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["addContact","createAction","name","number","payload","id","uuidv4","deleteContact","updateFilter","itemsReducer","createReducer","actions","state","filter","filterReducer","_","combineReducers","items","contactsPersistConfige","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","useStyles","makeStyles","form","width","height","display","flexDirection","justifyContent","connect","dispatch","onAdd","value","classes","item","onInputChange","event","target","className","type","onChange","Button","variant","color","size","onClick","map","contact","includes","alert","onDelete","onClose","handlerDelete","currentTarget","toLowerCase","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","handleBackdropClick","window","addEventListener","this","removeEventListener","createPortal","children","Component","Phonebook","showModal","toggleModal","setState","App","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.8056c3e9.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst addContact = createAction(\r\n  \"phonebook/Save_contact\",\r\n  ({ name, number }) => ({\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  })\r\n);\r\n\r\nconst deleteContact = createAction(\"phonebook/Delete_contact\");\r\nconst updateFilter = createAction(\"phonebook/Update_filter\");\r\n\r\nexport default { addContact, deleteContact, updateFilter };\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//   type: actionsTypes.SAVE,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\n// export const deleteContact = (id) => ({\r\n//   type: actionsTypes.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\n// export const updateFilter = (value) => ({\r\n//   type: actionsTypes.UPDATE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\n// import { combineReducers } from \"redux\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.updateFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n// import { combineReducers } from \"redux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst contactsPersistConfige = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// const persistedReducer = persistReducer(contactsPersistConfige, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfige, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contacts-actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles({\r\n  form: {\r\n    width: 275,\r\n    height: 150,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-around\",\r\n  },\r\n});\r\n\r\nconst ContactForm = ({ contacts, onAdd }) => {\r\n  const classes = useStyles();\r\n  let item = { name: \"\", number: \"\" };\r\n\r\n  const onInputChange = (event) => {\r\n    item = { ...item, [event.target.id]: event.target.value };\r\n  };\r\n\r\n  const isAlreadyContact = () => {\r\n    const Names = contacts.map((contact) => contact.name);\r\n    return Names.includes(item.name);\r\n  };\r\n\r\n  const onSave = () => {\r\n    isAlreadyContact()\r\n      ? alert(`${item.name} is already in contacts.`)\r\n      : onAdd(item);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <label>Name</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"name\"></input>\r\n      <label>Number</label>\r\n      <input type=\"text\" onChange={onInputChange} id=\"number\"></input>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        type=\"button\"\r\n        onClick={onSave}\r\n      >\r\n        Add contact\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    onAdd: (value) => dispatch(actions.addContact(value)),\r\n  };\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contacts-actions\";\r\n\r\nconst Filter = ({ updateFilter }) => {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input type=\"text\" onChange={updateFilter} id=\"find\"></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => {\r\n  return {\r\n    updateFilter: (event) => dispatch(actions.updateFilter(event.target.value)),\r\n  };\r\n};\r\n\r\nFilter.propTypes = {\r\n  updateFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchProps)(Filter);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/contacts/contacts-actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst ContactList = ({ filter, contacts, onDelete, onClose }) => {\r\n  const onFilterContacts = () => {\r\n    const filterContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n    return filterContacts;\r\n  };\r\n\r\n  const handlerDelete = (event) => {\r\n    onDelete(event.currentTarget.id);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {(filter ? onFilterContacts() : contacts).map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <Button\r\n            color=\"secondary\"\r\n            type=\"button\"\r\n            id={id}\r\n            onClick={handlerDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: state.contacts.items,\r\n    filter: state.contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchProps = (dispatch) => ({\r\n  onDelete: (value) => dispatch(actions.deleteContact(value)),\r\n});\r\n\r\nContactList.propTypes = {\r\n  filter: PropTypes.string,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchProps)(ContactList);\r\n","import React, { Component } from \"react\";\r\n// import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport \"./Modal.css\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\n// ========== HOOK =============\r\n\r\n// const Modal = ({ onClose, children }) => {\r\n//   //   componentDidMount\r\n//   useEffect(() => {\r\n//     window.addEventListener(\"keydown\", handleKeyDown);\r\n//     //   componentWillUnmount\r\n//     return () => {\r\n//       window.removeEventListener(\"keydown\", handleKeyDown);\r\n//     };\r\n//   }, []);\r\n\r\n//   const handleKeyDown = (event) => {\r\n//     if (event.code === \"Escape\") {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   const handleBackdropClick = (event) => {\r\n//     if (event.target === event.currentTarget) {\r\n//       onClose();\r\n//     }\r\n//   };\r\n\r\n//   return createPortal(\r\n//     <div className=\"Modal__backdrop\" onClick={handleBackdropClick}>\r\n//       <div className=\"Modal__content\">{children}</div>\r\n//     </div>,\r\n//     modalRoot\r\n//   );\r\n// };\r\n\r\n// export default Modal;\r\n\r\n// =========== CLASS =============\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (event) => {\r\n    if (event.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.target === event.currentTarget) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal__content\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <h1>Контакт удален</h1>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              type=\"button\"\r\n              onClick={this.toggleModal}\r\n            >\r\n              Закрыть\r\n            </Button>\r\n          </Modal>\r\n        )}\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList onClose={this.toggleModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}